import socket
from Crypto.Random import get_random_bytes
import hashlib
import time


def phase_1():
    try:
        choice_type = int(input("\n1: Encrypt\n2: Decrypt\n3: Exit\n\nChoice: "))
        if 0 < choice_type < 4 and choice_type == 1:

            password = get_random_bytes(256)
            key = hashlib.sha256(password).digest()
            IV = get_random_bytes(16)

            keys = open("key.txt", 'wb')
            iv = open("IV.txt", 'wb')
            keys.write(key)
            iv.write(IV)
            keys.close()
            iv.close()

            return b'Encrypt', key, IV

        elif 0 < choice_type < 4 and choice_type == 2:

            keys = open("key.txt", "rb")
            key = keys.read()
            keys.close()

            iv = open("IV.txt", "rb")
            IV = iv.read()
            iv.close()

            return b'Decrypt', key, IV

        elif 0 < choice_type < 4 and choice_type == 3:
            return b'End', b'1', b'1'

        else:
            int("error")

    except ValueError:
        print("Invalid Option!!")
        phase_1()


def socketing():
    port = 12345
    ip = ""

    s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)

    s.bind((ip, port))
    s.listen(1)
    print("Socket is listening...")

    client, address = s.accept()
    print('Got connection from ', address)

    while True:
        value = phase_1()

        for msg in value:
            client.send(msg)
            time.sleep(0.2)
            if msg == b'End':
                client.close()
                exit()

        print("Waiting For Completion...")
        client.recv(9999)
        print("Completed" + "\n"*2)


socketing()